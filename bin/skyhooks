#!/usr/bin/env ruby
# skyhooks

# 20220505
# 0.2.1

# Changes:
# 1. Goes to the next file without running rspec if gsub! doesn't change the file.
# 0/1
# 2. ~ main(): /rspec/bin\/rspec/
# 3. ~ main(): minor tweaks in output.

root_dir = File.dirname(File.dirname(File.expand_path(__FILE__)))
$LOAD_PATH.unshift(root_dir) unless $LOAD_PATH.include?(root_dir)

lib_dir = File.join(root_dir, 'lib')
$LOAD_PATH.unshift(lib_dir) unless $LOAD_PATH.include?(lib_dir)

require 'Array/match'
require 'File/self.gsubX'
require 'fileutils'

RAILS_EXCLUSIONS = [
  /factories/,
  /fixtures/,
  /spec_helper/,
  /support/
]

def dir_or_file
  File.expand_path(ARGV[0]) || '.'
end

def test_filenames
  if File.directory?(dir_or_file)
    Dir.glob("#{dir_or_file}/**/*.rb").select do |filename|
      RAILS_EXCLUSIONS.match(filename).empty?
    end
  else
    [dir_or_file]
  end
end

def main
  test_filenames.each do |test_filename|
    p test_filename
    FileUtils.cp(test_filename, "#{test_filename}.orig")
    File.gsub!(test_filename, /create\(/, 'build(')
    `diff #{test_filename}.orig #{test_filename}`
    p $?
    if $?.exitstatus.zero? # If there is no difference...
      FileUtils.rm("#{test_filename}.orig")
      next
    else
      FileUtils.rm("#{test_filename}.orig")
    end
    p("bin/rspec #{test_filename}")
    system("bin/rspec #{test_filename}")
    next if $?.exitstatus.zero?
    p("git checkout #{test_filename}")
    system("git checkout #{test_filename}")
  end
end

main
